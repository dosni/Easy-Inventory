


<FluentCombobox Items="@Items"
                OptionText="@(i => i.Text)"
                OptionValue="@(i => i.Value)"
@bind-SelectedOption="@SelectedOption"
@bind-Value="@SelectedValue" />



@code {
    [Parameter]
    public List<Option<string>> Items { get; set; }


    [Parameter] public EventCallback<Option<string>> OnSelectedOptionChanged { get; set; }
    [Parameter] public EventCallback<string> OnSelectedValueChanged { get; set; }

    private string? SelectedValueSelect = string.Empty;
    private Option<string> SelectedOptionSelect = default!;

    string? SelectedValue
    {
        get
        {
            return SelectedValueSelect;
        }
        set
        {
            SetSelectedValueAsync(value);

        }
    }
    private async Task SetSelectedValueAsync(string value)
    {
        SelectedValueSelect = value;
        await OnSelectedValueChanged.InvokeAsync(value);
    }

    Option<string> SelectedOption
    {
        get
        {
            return SelectedOptionSelect;
        }
        set
        {
            SetSelectedOptionAsync(value);

        }
    }
    private async Task SetSelectedOptionAsync(Option<string> value)
    {
        SelectedOptionSelect = value;
        await OnSelectedOptionChanged.InvokeAsync(value);
    }

    protected override async Task OnInitializedAsync()
    {
   

        try
        {
            base.OnInitialized();
            SelectedOptionSelect = Items.First();

            await OnSelectedOptionChanged.InvokeAsync(SelectedOptionSelect);
        }
        catch (Exception ex)
        {
            string msg = ex.Message;
            return;
        }

     
    }


}

